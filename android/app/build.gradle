def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}
//def keystorePropertiesFile = rootProject.file("key.properties")
//def keystoreProperties = new Properties()
//keystoreProperties.load(new FileInputStream(keystorePropertiesFile))


def flutterRoot = localProperties.getProperty('flutter.sdk')
//if (flutterRoot == null) {
//    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
//}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 34
    ndkVersion flutter.ndkVersion
    namespace 'com.episode.vcommunity'
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.episode.vcommunity"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 24
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        
        ndk {
            abiFilters 'arm64-v8a'
        }
    }
//    signingConfigs {
//        release {
//            keyAlias 'sign'
//            keyPassword 'ljw0925'
//            storeFile file('key/sign.jks')
//            storePassword 'ljw0925'
//        }
//    }
    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}
repositories{
    flatDir{
        dirs 'libs'
    }
}
dependencies {
//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'com.google.code.gson:gson:2.11.0'

    implementation "com.google.ar.sceneform:core:1.15.0"
    implementation 'com.google.ar.sceneform.ux:sceneform-ux:1.15.0'
    implementation 'com.google.ar.sceneform:assets:1.15.0'
    implementation 'com.google.ar:core:1.29.0'

    implementation 'com.squareup.picasso:picasso:2.8'

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.11.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-livedata:2.7.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.7.0'
    implementation 'androidx.core:core-ktx:1.13.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

//    def camerax_version = "1.0.0-beta05"
//    implementation "androidx.camera:camera-core:${camerax_version}"
//    implementation "androidx.camera:camera-camera2:${camerax_version}"
//    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
//    implementation "androidx.camera:camera-view:1.0.0-alpha12"

    def camerax_version = "1.3.3"
    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    implementation "androidx.camera:camera-view:1.3.3"
    implementation("com.google.guava:guava:30.1.1-jre")

    implementation(platform("com.squareup.okhttp3:okhttp-bom:4.12.0"))
    implementation files('src/libs/tesseract4android-openmp-debug.aar')
    implementation 'com.lzy.net:okgo:3.0.4'
    implementation 'com.lzy.net:okrx2:2.0.2'

}

apply plugin: 'com.google.ar.sceneform.plugin'

sceneform.asset(
    'sampledata/line_transparent.gltf',
    'default',
    'sampledata/line_transparent.sfa',
    'src/main/assets/line_transparent',
)
